// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contact {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  fullname    String
  email       String?
  phoneNumber String

  demandType DemandType @default(SELL)
  message    String?

  noteByAdmin      String?
  processingStatus ProcessingStatus @default(PENDING)
}

enum DemandType {
  BUY
  SELL
}

enum ProcessingStatus {
  PENDING
  WORKING
  COMPLETE
}

enum EstateCategory {
  DAT_NEN
}

enum PostStatus {
  DRAFT
  PUBLISHED
  HIDDEN
}

enum PostType {
  PROJECT
  NEWS
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name      String
  thumbnail String?
  gallery   String[]

  description String?

  content String?

  slug       String?    @unique @default(uuid())
  postStatus PostStatus @default(DRAFT)

  postType PostType @default(NEWS)
}

model Property {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name      String
  thumbnail String?
  gallery   String[]

  description String?
  content     String?

  slug String? @unique @default(uuid())

  province String
  district String
  address  String
  area     Int

  price      Int
  postStatus PostStatus @default(DRAFT)

  estateCategory String?

  iframe String?
}

model BuyDemand {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name      String
  thumbnail String?
  gallery   String[]

  description String?

  slug String? @unique @default(uuid())

  province       String
  district       String
  address        String
  area           Int
  estateCategory EstateCategory @default(DAT_NEN)
}

model Tag {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  slug      String   @unique
}

model Province {
  id       Int        @id @default(autoincrement())
  type     String
  name     String
  District District[]
}

model District {
  id         Int      @id @default(autoincrement())
  type       String
  name       String
  provinceId Int
  province   Province @relation(fields: [provinceId], references: [id])
  Ward       Ward[]
}

model Ward {
  id         Int      @id @default(autoincrement())
  type       String
  name       String
  districtId Int
  district   District @relation(fields: [districtId], references: [id])
}
